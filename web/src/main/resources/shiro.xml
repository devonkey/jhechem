<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <import resource="classpath:redis.xml"/>

    <bean id="shiroFilter" class="top.jhechem.web.shiro.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="unauthorizedUrl" value="/unauthorized"/>
        <property name="filters">
            <map>
                <entry key="perms">
                    <bean class="top.jhechem.web.filter.PermissionsAuthorizationFilter"/>
                </entry>
                <entry key="logout">
                    <bean class="top.jhechem.web.filter.ShiroLogoutFilter"/>
                </entry>
                <entry key="authc" value-ref="authcFilter"/>
            </map>
        </property>
    </bean>


    <bean id="authcFilter" class="top.jhechem.web.filter.ShiroAuthenticationFilter">
        <property name="loginUrl" value="/login"/>
    </bean>

    <bean id="shiroDynamicLoadDefinition"
          class="top.jhechem.web.biz.ShiroDynamicLoadDefinitionImpl"
          lazy-init="false">
        <property name="filterChainDefinitions">
            <value>
                /login = authc
                /logout = logout
                /menu/** = anon
                /admin/test=anon
                /role/list=anon
            </value>
        </property>
    </bean>

    <bean id="shiroCredentialsMatcher" class="top.jhechem.web.shiro.ShiroCredentialsMatcher"/>

    <bean id="shiroRealm" class="top.jhechem.web.shiro.ShiroRealm">
        <property name="credentialsMatcher" ref="shiroCredentialsMatcher"/>
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="shiroRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <bean id="lifecycleBeanPostProcessor"
          class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>


    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>


    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean id="sessionIdGenerator"
          class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <bean id="sessionDao" class="top.jhechem.web.shiro.SessionDAOImpl">
        <property name="pool" ref="loginJedisPool"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <bean id="sessionFactory" class="org.apache.shiro.session.mgt.SimpleSessionFactory"/>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="sessionDao"/>
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="globalSessionTimeout" value="${login.session.timeout}"/>
        <!--<property name="sessionIdCookie.name" value="${login.sessionIdCookie.name}"/>-->
        <property name="sessionIdCookie.path" value="/"/>
        <property name="sessionIdCookie.httpOnly" value="false"/>
        <property name="sessionValidationSchedulerEnabled" value="false"/>
    </bean>

</beans>