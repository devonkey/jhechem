<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="unauthorizedUrl" value="/unauthorized"/>
        <property name="filters">
            <map>
                <entry key="perms">
                    <bean class="top.jhechem.web.filter.PermissionsAuthorizationFilter"/>
                </entry>
                <entry key="logout">
                    <bean class="top.jhechem.web.filter.ShiroLogoutFilter"/>
                </entry>
                <entry key="authc" value-ref="authcFilter"/>
            </map>
        </property>
    </bean>


    <bean id="authcFilter" class="top.jhechem.web.filter.ShiroAuthenticationFilter">
        <property name="loginUrl" value="/login"/>
    </bean>

    <bean id="dynamicUrlDefinitionService"
          class="cn.idongjia.router.shiro.definition.DynamicUrlDefinitionServiceImpl"/>

    <bean id="shiroDynamicLoadDefinition"
          class="cn.idongjia.router.shiro.definition.ShiroDynamicLoadDefinitionImpl">
        <property name="shiroFilter" ref="shiroFilter"/>
        <property name="dynamicDefinitionService" ref="dynamicUrlDefinitionService"/>
        <property name="filterChainDefinitions">
            <value>
                /login = authc
                /logout = logout
                /menu/** = anon
            </value>
        </property>
    </bean>


    <bean id="shiroRealmService" class="cn.idongjia.router.shiro.realm.ShiroRealmService"/>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="shiroRealmService"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>


    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>


    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="sessionDao"/>
        <property name="globalSessionTimeout" value="3600000"/>
        <property name="sessionIdCookie.name" value="ADMIN"/>
        <property name="sessionIdCookie.path" value="/"/>
        <property name="sessionIdCookie.httpOnly" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="false"/>
    </bean>

    <bean id="sessionDao" class="cn.idongjia.router.shiro.session.ShiroClusterSeesionManager">
        <property name="sessionDAO" ref="sessionService" />
        <property name="concurrentSessionFilter" ref="concurrentSessionFilter"/>
    </bean>


    <bean id="sessionService" class="cn.idongjia.router.shiro.session.RedisSessionServiceImpl"/>

    <bean id="concurrentSessionFilter" class="cn.idongjia.router.shiro.session.DefaultConcurrentSessionFilter">
        <property name="sessionDAO" ref="sessionService"/>
        <property name="jedisPool" ref="jedisPool"/>
        <property name="maxSession" value="1"/>
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>


    <!-- redis -->
    <bean id="jedisPoolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig"/>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" type="org.apache.commons.pool2.impl.GenericObjectPoolConfig"
                         ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.host}"/>
        <constructor-arg index="2" type="int" value="${redis.port}"/>
        <constructor-arg index="3" type="int" value="2000"/>
        <constructor-arg index="4" value="${redis.password}"/>
    </bean>


</beans>